on: [push, pull_request]

name: CI

env:
  DESTDIR: "${{ github.workspace }}/dist"
  WINEPREFIX: "/tmp/.wine"

jobs:
  "Package_Source":
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu1604

    steps:
      - name: Checkout Naev Repository
        uses: actions/checkout@v2
        with:
          path: source
          fetch-depth: 0

      - name: Package Dist
        run: |
          meson setup build source -Dexecutable=disabled -Ddocs_c=disabled -Ddocs_lua=disabled
          meson dist -C build --no-tests --include-subprojects

      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naikari-dist-${{ github.sha }}
          path: ${{ github.workspace }}/build/meson-dist/*

  "Linux_Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: naev-ubuntu2004
            config: linux.ini

    runs-on: ubuntu-latest
    container:
      image: "projectsynchro/synchros_sexy_docker_images:${{ matrix.tag }}"

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naikari-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naikari-dist-${{ github.sha }}/naikari-*.tar.xz -C source --strip 1

      - name: Meson Setup
        id: setup
        run: |
          meson setup build source \
              --native-file='source/utils/build/${{ matrix.config }}' \
              --buildtype=debug \
              --wrap-mode=forcefallback \
              -Db_lto=true \
              -Dauto_features=enabled \
              -Ddocs_c=disabled \
              -Ddocs_lua=disabled \
              -Dforce_fallback_for=SuiteSparse

      - name: Upload Setup Log
        uses: actions/upload-artifact@v1
        if: ${{ success() || steps.setup.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-setup-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Meson Compile
        id: compile
        run: |
          meson compile -C build
          meson compile -C build naev-gmo

      - name: Upload Compile Log
        uses: actions/upload-artifact@v1
        if: ${{ success() || steps.compile.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-compile-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Test Install
        run: |
          meson install -C build

      - name: Upload Install Log
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-install-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

  "Windows_Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: naev-windows
            config: windows_cross_mxe.ini

    runs-on: ubuntu-latest
    container:
      image: "projectsynchro/synchros_sexy_docker_images:${{ matrix.tag }}"

    steps:
      - name: Container-specific setup
        run: |
          echo /usr/lib/mxe/usr/bin >> $GITHUB_PATH

      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naikari-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naikari-dist-${{ github.sha }}/naikari-*.tar.xz -C source --strip 1

      - name: Meson Setup
        id: setup
        run: |
          meson setup build source \
              --cross-file='source/utils/build/${{ matrix.config }}' \
              --buildtype=debug \
              --wrap-mode=forcefallback \
              -Db_lto=true \
              -Dauto_features=enabled \
              -Ddocs_c=disabled \
              -Ddocs_lua=disabled \
              -Dforce_fallback_for=SuiteSparse

      - name: Upload Setup Log
        uses: actions/upload-artifact@v2
        if: ${{ success() || steps.setup.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-setup-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Meson Compile
        id: compile
        run: |
          meson compile -C build
          meson compile -C build naev-gmo

      - name: Upload Compile Log
        uses: actions/upload-artifact@v2
        if: ${{ success() || steps.compile.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-compile-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-buildArtifacts
          path: |
            ${{ github.workspace }}/build
          if-no-files-found: error

      - name: Test Install
        run: |
          meson install -C build

      - name: Upload Install Log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-install-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

  "Darwin_Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-10.15
            config: macos.ini
            pkg-config-path: /usr/local/opt/openal-soft/lib/pkgconfig

          # Alas, these instances don't grow on trees. As of 2021-01-03, we commonly see the CI die with a useless "This check failed" message.
          # Hopefully we can reenable this check sometime soon.
          # - os: macos-11.0
          #   config: macos.ini
          #   pkg-config-path: /usr/local/opt/openal-soft/lib/pkgconfig

    runs-on: "${{ matrix.os }}"

    steps:
      - name: Install Homebrew Packages
        run: |
          brew update
          # Library installation is a work in progress. This way results in a build that requires >=10.15.
          # TODO: install compatible ones and set MACOSX_DEPLOYMENT_TARGET.
          brew install \
            openal-soft \
            intltool \
            libvorbis \
            luajit \
            sdl2

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install Meson and Ninja via pip
        run: |
          pip install meson ninja

      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naikari-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naikari-dist-${{ github.sha }}/naikari-*.tar.xz -C source --strip 1

      - name: Meson Setup
        id: setup
        run: |
          meson setup build source \
              --native-file='source/utils/build/${{ matrix.config }}' \
              --buildtype=debug \
              --pkg-config-path=${{ matrix.pkg-config-path }} \
              -Db_lto=true \
              -Dauto_features=enabled \
              -Ddocs_c=disabled \
              -Ddocs_lua=disabled

      - name: Upload Setup Log
        uses: actions/upload-artifact@v1
        if: ${{ success() || steps.setup.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-setup-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Meson Compile
        id: compile
        run: |
          meson compile -C build
          meson compile -C build naev-gmo

      - name: Upload Compile Log
        uses: actions/upload-artifact@v2
        if: ${{ success() || steps.compile.outcome == 'failure' }}
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-compile-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-buildArtifacts
          path: |
            ${{ github.workspace }}/build
          if-no-files-found: error

      - name: Test Install
        run: |
          meson install -C build

      - name: Upload Install Log
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}-${{ github.sha }}-install-log
          path: ${{ github.workspace }}/build/meson-logs/meson-log.txt

  "AppImage_Compile_Naev":
    needs: [Package_Source, Linux_Compile_Naev]
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu1604

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naikari-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naikari-dist-${{ github.sha }}/naikari-*.tar.xz -C source --strip 1

      - name: Compile AppImage
        id: appimageCompile
        run: |
          mkdir -p /tmp/out
          script -c "./source/utils/buildAppImage.sh -c -m -s "source" -b "build" -o "$DESTDIR"" appImageBuildLog.txt
        env:
          APPIMAGE_EXTRACT_AND_RUN: 1

      - name: Upload AppImage Compile Log
        uses: actions/upload-artifact@v2
        if: ${{ (success() || steps.appimageCompile.outcome == 'failure') }}
        with:
          name: naikari-${{ github.sha }}-AppImageBuild-log
          path: |
            ${{ github.workspace }}/appImageBuildLog.txt

      - name: Upload AppImage Artifact
        uses: actions/upload-artifact@v2
        with:
          name: naikari-${{ github.sha }}-AppImageBuild
          path: |
            ${{ github.workspace }}/dist/out
          if-no-files-found: error

  "Lua_Documentation":
    runs-on: ubuntu-latest
    container:
      image: projectsynchro/synchros_sexy_docker_images:naev-ubuntu2004
    needs:
      [
        Package_Source,
        Linux_Compile_Naev,
        Windows_Compile_Naev,
        Darwin_Compile_Naev,
      ]

    steps:
      - name: Get Source
        uses: actions/download-artifact@v1
        with:
          name: naikari-dist-${{ github.sha }}

      - name: Extract Source
        run: |
          mkdir source
          tar -xf naikari-dist-${{ github.sha }}/naikari-*.tar.xz -C source --strip 1

      - name: Meson Setup
        run: |
          meson setup build source \
              -Dexecutable=disabled

      - name: Meson Compile
        run: |
          meson compile -C build
          meson compile -C build naev-gmo
